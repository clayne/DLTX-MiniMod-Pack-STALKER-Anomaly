ui_inventory.UIInventory.RMode_EvaluateUpgr = function(self, row, col, ii, info)
	self:Print(nil, "RMode_EvaluateUpgr | row: %s - col: %s - ii: %s", row, col, ii)
	
	local btn = self.upx[ii].btn
	
	-- We don't evalute installed upgrades
	if btn:GetCheck() or self.upgr_installed[info.section] then
		btn:SetCheck(true)
		self.upx[ii].prereq = game.translate_string("st_upgr_installed")
		return
	end

	-- Check if upgrade group is installed
	if (not self.upgr_tree[row][col].solo) then
		local col_g = odd(col) and col+1 or col-1
		local section_g = self.upgr_tree[row][col_g].section
		if self.upgr_installed[section_g] then
			btn:Enable(true)
			
			return
		end
	end

	-- Check price + mechanic info portion + parsed profile
	local ret = inventory_upgrades.precondition_functor_a(nil, info.stats)
	local prereq = parse_func(info.section, "prereq_functor", nil, info.stats) or ""
	
	-- Check if parent upgrades is not installed
	local prev_installed = col <= 2 and true or false
	local section = self.upgr_tree[row][col].section
	if (not prev_installed) then
		for c, v in pairs(self.upgr_tree[row]) do
			if v.effect and v.effect[section] and self.upgr_installed[v.section] then
				prev_installed = true
			end
		end
	end
	if (not prev_installed) then
		ret = 2
		prereq = prereq .. "\\n - " .. game.translate_string("st_upgr_parents")
	end
	
	-- Finale
	if prereq and prereq ~= "" then
		prereq = game.translate_string("st_upgr_disable") .. " \\n" .. prereq
	end
	
	self.upx[ii].prereq = prereq
	btn:Enable( (ret == 0) )
end